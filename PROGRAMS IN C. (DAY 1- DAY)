DAY:1
//C programs to find size of the processor using pointer.
#include <stdio.h>

int main()
{
	int *ptr;
	printf("size of processor's word(pointer size):%zu bytes\n",sizeof(ptr));
	return 0;
}

//C program to find largest from 3 variable in one line.
#include <stdio.h>
int main()
{
	int a,b,c;
	printf("Enter no.");
	scanf("%d",&a);
	printf("Enter no.");
	scanf("%d",&b);
	printf("Enter no.");
	scanf("%d",&c);
	int largest=(a>b)?(a>c?a:c):(b>c?b:c);
	printf("The largest number is %d",largest);
	return 0;
}

//Swap two numbers without using odd and minus operators as well as third variables and pointers.
#include <stdio.h>
int main()
{
	int a,b;
	printf("Enter no.:");
	scanf("%d",&a);
	printf("Enter no.:");
	scanf("%d",&b);
	a^=b^=a^=b;
	printf("%d \n",a);
	printf("%d \n",b);
	return 0;
}

//find even or odd without modulus.
#include <stdio.h>
int main()
{
	int num;
	printf("Enter a number:");
	scanf("%d",&num);
	if (num&1)
	{
	  printf("%d is an odd number\n",num);
    }
    else
    {
      printf("%d is an even number\n",num);	
	}
	return 0;
}
DAY:2
//C program to check head or tail
#include <stdio.h>
int main()
{
	char head;
	char h;
	printf("Enter character for head:");
	scanf("%c",&head);
	if(head=='h')
	printf("Head");
	else
	printf("Tail");
	return 0;
}

//C program to check the leap year or not
#include <stdio.h>
int main()
{
	int Year;
	printf("Enter the Year:");
	scanf("%d",&Year);
	if(Year%400==0)
	printf("%d is Leap Year",Year);
	else if(Year%100!=0)
	printf("%d is not Leap Year",Year);
	else if(Year%4==0)
	printf("%d is Leap Year",Year);
	else
	printf("%d is not Leap Year",Year);
	return 0;
}

//C program to find that the roll number 20 is present or not.
#include <stdio.h>
int main()
{
	int roll_num;
	printf("Enter your roll number:");
	scanf("%d",&roll_num);
	if(roll_num==20)
	printf("The specified roll number 20 is present");
	return 0;
}

//C programs to print ADAMAS UNIVERSITY
#include <stdio.h>
int main()
{
	printf("Adamas University");
	return 0;
}

//C programs to find greatest of 3 number using ladder if-else
#include <stdio.h>
int main()
{
	int a,b,c;
	printf("Enter the value of three number:");
	scanf("%d %d %d",&a,&b,&c);
	if(a>b && a>c)
	{
		printf("a is maximum");
	}
	else if("b>a && b>c")
	{
		printf("b is maximum");
	}
	else
	{
		printf("c is maximum");
	}
	return 0;
}

//C programs to find greatest of 3 number using Nested if-else
#include <stdio.h>
int main()
{
	int a,b,c;
	printf("Enter the value of three number:");
	scanf("%d %d %d",&a,&b,&c);
	if (a>b)
	{
	if (a>c)	
	printf("a is maximum");
	else 
	printf("c is maximum");
    }
	else
	{
	if (b>c)	
	printf("b is maximum");
	else 
	printf("b is maximum");
	}
	return 0;
}

DAY:3

//C Programs to find factorial using for loop
#include <stdio.h>
int main()
{
	int num,factorial=1;
	printf("Enter a number:");
	scanf("%d",&num);
	if (num<0)
	{
		printf("Factorial of a negative number doesn't exist");
	}
	else
	{
		for (int i=1;i<=num;i++)
		{
			 factorial*= i;
		}
		printf("Factorial of %d is:%d\n",num,factorial);
	}
	return 0;
}

//C Programs to find fibonacci using for loop.
#include <stdio.h>
int main()
{
	int n,i;
	long long int fib[50];
	printf("Enter the number of terms:");
	scanf("%d",&n);
	fib[0]=0;
	fib[1]=1;
	printf("Fibonacci series: %d,%d", fib[0],fib[1]);
		for (int i=2;i<n;i++)
		{
			 fib[i]=fib[i-1]+fib[i-2];
			 printf(",%d",fib[i]);
		}
	printf("\n");
	return 0;
}

//C Programs to Count the number of digit using loop.
#include <stdio.h>
int main()
{
	int num,count=0;
	printf("Enter a number:");
	scanf("%d",&num);
	while (num!=0)
	{
		num/=10;
		count++;
	}
		printf("Number of digits:%d\n",count);
	return 0;
}

//C Programs to find prime numbers,
#include <stdio.h>
int main() {
    int num, i, flag = 0;

    printf("Enter a number: ");
    scanf("%d", &num);

    if (num <= 1) {
        printf("%d is not a prime number.\n", num);
    } else {
        for (i = 2; i <= num / 2; i++) {
            if (num % i == 0) {
                flag = 1;
                break;
            }
        }

        if (flag == 0) {
            printf("%d is a prime number.\n", num);
        } else {
            printf("%d is not a prime number.\n", num);
        }
    }

    return 0;
}

//C Programs to find Armstrong Number.
#include <stdio.h>
int main() {
    int num, original, remainder, result = 0, n = 0;

    printf("Enter a number: ");
    scanf("%d", &num);

    original = num;

    // Count the number of digits
    while (original != 0) {
        original /= 10;
        n++;
    }

    original = num;

    // Calculate the Armstrong number
    while (original != 0) {
        remainder = original % 10;
        result += (int) (remainder * pow(remainder, n));
        original /= 10;
    }

    if (result == num) {
        printf("%d is an Armstrong number.\n", num);
    } else {
        printf("%d is not an Armstrong number.\n", num);
    }

    return 0;
}

//C Program to reverse a number.
#include <stdio.h>
int main() {
    int num, reverse = 0, remainder;

    printf("Enter a number: ");
    scanf("%d", &num);

    while (num != 0) {
        remainder = num % 10;
        reverse = reverse * 10 + remainder;
        num /= 10;
    }

    printf("Reversed number: %d\n", reverse);

    return 0;
}

//Check whether the number is pallindrome or not.
#include <stdio.h>
int main() {
    int num, reverse = 0, remainder, original;

    printf("Enter a number: ");
    scanf("%d", &num);

    original = num;

    while (num != 0) {
        remainder = num % 10;
        reverse = reverse * 10 + remainder;
        num /= 10;
    }

    if (original == reverse) {
        printf("%d is a palindrome number.\n", original);
    } else {
        printf("%d is not a palindrome number.\n", original);
    }

    return 0;
}

DAY:4

// Function to calculate factorial
#include <stdio.h>
long factorial(int num) {
    if (num == 0 || num == 1) {
        return 1;
    } else {
        return num * factorial(num - 1);
    }
}

int main() {
    int num;
    printf("Enter a positive integer: ");
    scanf("%d", &num);

    if (num < 0) {
        printf("Factorial is not defined for negative numbers.");
    } else {
        printf("Factorial of %d = %ld\n", num, factorial(num));
    }

    return 0;
}

// Recursive function to calculate factorial
#include <stdio.h>
long factorial(int num) {
    if (num == 0 || num == 1) {
        return 1;
    } else {
        return num * factorial(num - 1);
    }
}

int main() {
    int num;
    printf("Enter a positive integer: ");
    scanf("%d", &num);

    if (num < 0) {
        printf("Factorial is not defined for negative numbers.");
    } else {
        printf("Factorial of %d = %ld\n", num, factorial(num));
    }

    return 0;
}

// Function to calculate Fibonacci series
#include <stdio.h>
int fibonacci(int n) {
    if (n == 0 || n == 1) {
        return n;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

int main() {
    int n;
    printf("Enter the number of terms: ");
    scanf("%d", &n);

    printf("Fibonacci series: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", fibonacci(i));
    }

    return 0;
}

// Recursive function to calculate Fibonacci series
#include <stdio.h>
int fibonacci(int n) {
    if (n == 0 || n == 1) {
        return n;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

int main() {
    int n;
    printf("Enter the number of terms: ");
    scanf("%d", &n);

    printf("Fibonacci series: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", fibonacci(i));
    }

    return 0;
}

// Recursive function to calculate GCD
#include <stdio.h>
int gcd(int a, int b) {
    if (b == 0) {
        return a;
    } else {
        return gcd(b, a % b);
    }
}
int main() {
    int num1, num2;
    printf("Enter two numbers: ");
    scanf("%d %d", &num1, &num2);

    printf("GCD of %d and %d is: %d\n", num1, num2, gcd(num1, num2));
return 0;
}

//CALL BY VALUE & CALL BY REFERENCE TO SWAP NUMBERS IN A SAME PROGRAM.
#include <stdio.h>
// Function to swap two numbers using call by value
void swap_value(int a, int b) {
    int temp = a;
    a = b;
    b = temp;
    printf("Inside swap_value function: a = %d, b = %d\n", a, b);
}

// Function to swap two numbers using call by reference
void swap_reference(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
    printf("Inside swap_reference function: a = %d, b = %d\n", *a, *b);
}

int main() {
    int num1 = 10, num2 = 20;

    printf("Before swapping (call by value): num1 = %d, num2 = %d\n", num1, num2);
    swap_value(num1, num2);
    printf("After swapping (call by value): num1 = %d, num2 = %d\n", num1, num2);

    printf("\nBefore swapping (call by reference): num1 = %d, num2 = %d\n", num1, num2);
    swap_reference(&num1, &num2);
    printf("After swapping (call by reference): num1 = %d, num2 = %d\n", num1, num2);

    return 0;
}








